d1 $ palindrome $ sound "bd*2 bd [sn sn:1] ~" # gain "1.3 1.2 1.1 1.1"

d1 $ palindrome $ s "tink:1*3 tink*2 tink:2 tink:3" # gain "1.5"
d2 $ slow 2 $ brak $ sound (fast 2 "casio*2 casio:3*3 can can:1*3") # speed (sine*2)
d2 $ palindrome $ chop 4 $ sound (fit 2 ["bd", "casio:4", "bd",  "casio:6", "arpy"] "0 [1 1 1] [0 1]") # bitcrush 2
hush
d1 $ iter 8 $ sound "bd hh sn cp"
d1 $ s "bd hh sn cp"
hush
d1 $ sound "bd sn kurt" # fast 3 (sound "sn bd bd*8")
d1 $ s (fast 2 "bd sn kurt:2")
d1 $ s "bd sn kurt:2" # fast 2 2

d1 $ s "metal"
d1 $ s "flick" # crush 0
t1 (wash (chop 3) 4) $ sound "future*4 [feel:2 sn:2]"
d2 $ s "jazz*2"
t1 (xfadeIn 16) $ sound "jvbass:2 jvbass:1 jvbass:4"

d2 $ s "bd future bass1 odx*2"
t2 (wash (fast 3) 4) $ s "odx*2 future jazz"
hush
d1 $ smash 3 [2,3,4] $ sound "ho ho:2 ho:3 hc"
d1 $ fast 0.5 $ s "bd sn bd sn"


d1 $ loopAt 4 $ chop 32 $ sound "breaks125"
d1 $ chop 2 $ sound "bev"
d1 $ sound "bd bd sn ~" # n 2 # speed 2
d1 $ every 3 (slow 0.5) $ sound "can can"
d1 $ fast 1 $ sound "can can"
d1 $ jux (rev) $ striate' 32 (1/16) $ sound "bev"

d1 $ (pure now) ~> seqP [
  (0, 12, sound "bd bd*2"),
  (4, 12, sound "hh*2 [sn cp] cp future*4"),
  (8, 12, sound (samples "arpy*8" (run 16)))
]
d1 $ superwash (cat 3 [sound "bd*2 sn", sound "arpy jvbass*2", sound "odx"])
d1 $ sound "arpy" # nudge "1*[0.003]"
d1 $ sound "rave2"
d1 $ silence
